Intro
-----

When smtp client has a message to transmit, it establishes a two way transmission channel to a smtp server. 
The responsibility of an smtp client is to transfer the mail message to one or more smtp servers, or reports its failure to do so. 

Smtp client determines the addess of an appropirate host running an smtp server by resolving a destination domain name to either an intermediate mail exchange host or final target host. 

Smtp commands are generated by the smtp client and sent to the smtp server. 
Smtp replies are sent from the smtp server to smtp client. 

Once the server has issued a success response at the end of the mail data, a formal handoff of responsibility occurs. 
The protocol requires that the server must accept responsibility for either delivering the message or properly reporting a failure to do so.

Once the transmission channel is established and initial handshaking is completed, smtp client initiates the mail transation.
Mail transaction consists of a series of commands to specify the orginator and designation of the message. 

The server responds to each command with a reply. 
Replies may indicate the command was accepted, that additional commands are expected, or error. 

Once a given mail has been transmitted , the client may either request that the connection be closed or may initiate other mail transactions.
In addition, SMTP client may use a connection to SMTP server for ancillary services such as verification of email addresses or retrival of mail list subscriber addresses. 

Usually, intermediate hosts are determined via the DNS MX record not by explicit source routing. 


Mail Object
------------

Smtp transports a mail object. 
A mail object contains an envelope and content.

Smtp envelope is sent as a series of smtp protocol units and consists:
1) Originator address,
2) Recipient address, and 
3) <any optional protocol extensions>

Smtp content is sent in the smtp DATA protocol unit and has 2 parts:
1) header 
2) body


Mail Agents and Message Stores
------------------------------
Smtp sessions are stateful with both parties carefully maintaining a common view of the current state. 
State is modeled using a virtual buffer and a state table. 
Client can request the server to reset the buffer or refresh the state table.

There are 4 types of smtp systems, based on the roles those systems play:
1) Orginating system
2) Delivery system
3) Relay system
4) Gateway system

An orginating system introduces mail into the mail system. 

A delivery system is one that receives mail and deposite it in a message store.

A relay system receives mail from a client and transmits it to another server. 

A gateway system receives mail from a client system in one transport environment and transmits it to a server system in another environment. 
Firewalls that rewrite addresses should be considered as gateways even if smtp is used on both sides of them.

General Syntax
---------------

Smtp commands and replies have a rigit syntax. 
All commands begin with a command verb. 
All replies begin with a 3 digit numeric code. 
Verbs and argument values are not case sensitive. 

Smtp Procedure: an overview
----------------------------

Smtp session is initiated when a client opens a connection to a server and the server responds with an opening message. 
Server responds with a greeting. 
Client then, normally, sends EHLO command indicating the clients identity.
In additional to opening the session, EHLO indicates that client supports service extensions. 

Mail Transaction
-----------------
There are 3 steps to SMTP mail transactions:
1) MAIL command
2) RCPT command
3) DATA command

The transaction starts with the MAIL command that gives the sender identification. 
A series of one or more RCPT command follows giving the receiver information.
DATA command is used to initiate transfer of mail data. 
DATA is terminated by "end of mail" terminator which also confirms the transaction.


The first step in the procedure is the MAIL command:

	MAIL FROM:<reverse-path> <mail-parameters> <CRLF>

This command tells the SMTP server that a new mail transaction is starting and to reset all its state tables and buffers. 
<reverse-path> contains the source mailbox which is used to report errors. 

If accepted smtp server returns a "250 OK" reply. 

The optional <mail-parameters> are associated with negotiated smtp service extensions. 

------------

The second step in the procedure is RCPT command. 
This step can be repeated any number of times. 

	RCPT TO:<forward-path> <rcpt-parameters> <CRLF>

<forward-path> is normally a mailbox and a domain identifying one recipient. 
If accepted the SMTP server returns a 250 OK reply and stores the forward path.
The optional <rcpt-parameters> are associated with negotiated smtp service extension 

-------------


The third step is the DATA command:

	DATA <CRLF>

If accepted, smtp server returns a 354 intermediate replay and consider everything to be message text. 
When end of the text is successfully received and stored, server sends 250 OK reply. 


Forwarding
----------

Forwarding support is most often used by enterprises to link a person's prior address to current one. 
Silent forwarding of message, with any notification to end user, is commonplace. 


Debugging Addresses
--------------------------------
Smtp provides commands to verify usernames or obtain the content of a mailing list. 
This is done with the VRFY and EXPN commands. 


VRFY takes username and/or domain as an argument.
If smtp server responds with a 250 OK, the server must include the mailbox of the user and optionally the fullname. 
If the name identify more than 1 mailbox, the server may either note the ambiguity or identify the alternatives. 


EXPN command contains a mailing list. 
If smtp servers sends 250 OK, it is required to send the full name of users and their mailboxes relating to the mailing list. 


SMTP Commands
-------------

Smtp commands are character strings terminated by <CRLF>

A mail transaction involves several data objects that are communicated as arguments to different commands. 
The <reverse-path> is the argument of the mail command. 
The <forward-path> is the argument of the RCPT command. 
The mail data is the argument of the DATA command. 

These data objects must be transmitted and held. 
Different buffers are provided to hold the type of data objects. 
There is a reverse-path buffer, a forward-path buffer and a data buffer. 
Specific commands cause information to be appended to a specific buffer, or cause or more more buffers to be cleared. 

EHLO commands are used to identify the smtp client to the smtp server. 
The argument contains FQDN.

MAIL command clears the reverse-path buffer, the forward-path buffer, and the mail data buffer. 
It than inserts the reverse-path buffer. 

RCPT command is used to identity an individual recipient. 
Multiple recipients are specified by multiple use of the command.
The argument clause contains forward-path and may contain optional parameters. 

RSET command specified that current mail transaction be aborted. 
Any stored data must be discarded and all buffers and state tables cleared. 
The receiver must send 250 OK reply to the RSET command. 
Smtp server must not close the connection as a result of a RSET; that action is reserved for QUIT.

EXPN command asks the receiver to confirm that the argument identifies a mailing list. 
IF the command is successful, a reply is returned. 
This reply will have multiple lines except in the trival case of one member list. 
EXPN has no effect on the reverse-path buffer, the forward-path buffer or mail-data buffer. 

HELP command causes the server to send helpful information to the client. 
The command may take an argument and return more specific information as a response. 
HELP has no effect on the reverse-path, the forward-path and the mail-data buffer. 
Smtp server should support HELP without argument and may support it with arguments. 

NOOP command does not affect any parameters or previously entered commands. 
If specifies no action other than the receive send "250 OK" reply. 
NOOP has no effect on any buffers. 

QUIT command specified that the receiver must send a 221 OK reply, and then close the connection.
The QUIT command may be issued at any time. 
Any current uncompleted mail transaction will be aborted. 


Order of commands
-----------------
There are restriction on the order in which these commands may be used. 
A session that will contain mail transaction must first start with EHLO.
Smtp servers will, however, accept VRFY or EXPN without initiation. 
NOOP, HELP, EXPN, VRFY, and RSET commands can be used at any time during a session. 


MAIL command begins a mail transaction. 
Once started, a mail transaction consists of:
1) A transaction begining command (EHLO)
2) One of more RCPT command [ for each recipient ]
3) And a DATA command with message body


SMTP replies
------------

Replies to smtp commands server to ensure synchronization of requests. 
It ensures that smtp client always knows the state of the smtp server. 
Every command must generate exactly one reply. 

Smtp reply consists of a 3 digit number followed by some text. 
Number is used for programs, text for human users. 
3 digits contains enough encoded information that smtp client does not need to parse the text. 
Reply code 220, 221, 251, 421 and 551 are associated with message text that must be parsed by the machines.
There are likely to be varying text for each reply codes. 

The text, in voilation of this specification, is sometimes not sent. 
Clients that do not receive this, should be prepared to process code alone. 
Only EHLO, EXPN and HELP is expected to result in multi-line replies. 

Unless overriden by one of the extensions; smtp server must not send reply codes whose 1st digit is NOT 2,3,4 or 5. 
Clients that receive such out of range code should normally treat them as fatal errors and terminate the transaction. 

The 3 digits each have special significance. 
1st denotes whether the response is good, bad or incomplete. 
Smtp client will be able to determine its next action by examining the 1st digit. 
Smtp client that want to know approximately what kind of error occured may examine the second digit. 
4rd digit provide any supplementary information that may be present.

2XX => Positive Completion Reply
--------------------------------
The requested action has been successfully completed. 
A new request may be initiated

3XX => Positive intermediate reply
-----------------------------------
The command has been accepted. 
The request action, however, is being held pending receipt of further information. 

4XX => Transient Negative Completion
-------------------------------------
The command was not accepted. 
The requested action did not occur. 
The error condition, however, is temporary and the action may be requested again. 
The sender should return to the beginning of the command sequence if any. 

5XX => Permanent Negative Completion
-------------------------------------
The command was not accepted and the requested action did not occurs. 
SMTP client should not repeat the exact same request. 

The second encodes responses in specific catagories:
X0X => Syntax Error 
X1X => Information => These are replies to requests for information, such as status or help. 
X2X => Connections => These are replies referring to the transmission channel. 

X3X => Unspecified 
X4X => Unspecified
 
X5X => Mail System => These replies indicate the status of the receiver mail system vis-a-vis the requested transfer.


A typical smtp Transaction Scenario
-------------------------------------

The smtp example shows mail sent by Smith at bar.com to Jones, Green and Brown at foo.com. 
Here we assume that bar.com contacts foo.com directly. 
The mail is accepted for Jones and Brown. 
Green does not have a mailbox at the host. 

S => 200 foo.com Simple MAil Transfer Service Read

C => EHLO bar.com

S => 250 foo.com greets bar.com
S => 250 8BITMIME
S => 250 SIZE
S => 250 DSN
S => 250 HELP

C => MAIL FROM:<smith@bar.com>

S => 250 OK

C => RCPT TO:<jones@foo.com> 

S => 250 OK

C => RCPT TO:<green@foo.com>

S => 550 No such user here

C => RCPT TO:<brown@foo.com>

S => 250 OK

C => DATA

S => 354 Start mail input, end with <CRLF>.<CRLF>

C => Blah.. Blah .. Blah
C => Jones and Brown can fuck off
C => Green does not even have a mailbox what a looser!! 
C => <CRLF>.<CRLF>

S => 200 OK

C => QUIT

S => 221 foo.com Closing tramission channel. 

 




















 

