Intro
-----

When smtp client has a message to transmit, it establishes a two way transmission channel to a smtp server. 
The responsibility of an smtp client is to transfer the mail message to one or more smtp servers, or reports its failure to do so. 

Smtp client determines the addess of an appropirate host running an smtp server by resolving a destination domain name to either an intermediate mail exchange host or final target host. 

Smtp commands are generated by the smtp client and sent to the smtp server. 
Smtp replies are sent from the smtp server to smtp client. 

Once the server has issued a success response at the end of the mail data, a formal handoff of responsibility occurs. 
The protocol requires that the server must accept responsibility for either delivering the message or properly reporting a failure to do so.

Once the transmission channel is established and initial handshaking is completed, smtp client initiates the mail transation.
Mail transaction consists of a series of commands to specify the orginator and designation of the message. 

The server responds to each command with a reply. 
Replies may indicate the command was accepted, that additional commands are expected, or error. 

Once a given mail has been transmitted , the client may either request that the connection be closed or may initiate other mail transactions.
In addition, SMTP client may use a connection to SMTP server for ancillary services such as verification of email addresses or retrival of mail list subscriber addresses. 

Usually, intermediate hosts are determined via the DNS MX record not by explicit source routing. 


Mail Object
------------

Smtp transports a mail object. 
A mail object contains an envelope and content.

Smtp envelope is sent as a series of smtp protocol units and consists:
1) Originator address,
2) Recipient address, and 
3) <any optional protocol extensions>

Smtp content is sent in the smtp DATA protocol unit and has 2 parts:
1) header 
2) body


Mail Agents and Message Stores
------------------------------
Smtp sessions are stateful with both parties carefully maintaining a common view of the current state. 
State is modeled using a virtual buffer and a state table. 
Client can request the server to reset the buffer or refresh the state table.

There are 4 types of smtp systems, based on the roles those systems play:
1) Orginating system
2) Delivery system
3) Relay system
4) Gateway system

An orginating system introduces mail into the mail system. 

A delivery system is one that receives mail and deposite it in a message store.

A relay system receives mail from a client and transmits it to another server. 

A gateway system receives mail from a client system in one transport environment and transmits it to a server system in another environment. 
Firewalls that rewrite addresses should be considered as gateways even if smtp is used on both sides of them.

General Syntax
---------------

Smtp commands and replies have a rigit syntax. 
All commands begin with a command verb. 
All replies begin with a 3 digit numeric code. 
Verbs and argument values are not case sensitive. 

Smtp Procedure: an overview
----------------------------

Smtp session is initiated when a client opens a connection to a server and the server responds with an opening message. 
Server responds with a greeting. 
Client then, normally, sends EHLO command indicating the clients identity.
In additional to opening the session, EHLO indicates that client supports service extensions. 

Mail Transaction
-----------------
There are 3 steps to SMTP mail transactions:
1) MAIL command
2) RCPT command
3) DATA command

The transaction starts with the MAIL command that gives the sender identification. 
A series of one or more RCPT command follows giving the receiver information.
DATA command is used to initiate transfer of mail data. 
DATA is terminated by "end of mail" terminator which also confirms the transaction.


The first step in the procedure is the MAIL command:

	MAIL FROM:<reverse-path> <mail-parameters> <CRLF>

This command tells the SMTP server that a new mail transaction is starting and to reset all its state tables and buffers. 
<reverse-path> contains the source mailbox which is used to report errors. 

If accepted smtp server returns a "250 OK" reply. 

The optional <mail-parameters> are associated with negotiated smtp service extensions. 

------------

The second step in the procedure is RCPT command. 
This step can be repeated any number of times. 

	RCPT TO:<forward-path> <rcpt-parameters> <CRLF>

<forward-path> is normally a mailbox and a domain identifying one recipient. 
If accepted the SMTP server returns a 250 OK reply and stores the forward path.
The optional <rcpt-parameters> are associated with negotiated smtp service extension 

-------------


The third step is the DATA command:

	DATA <CRLF>

If accepted, smtp server returns a 354 intermediate replay and consider everything to be message text. 
When end of the text is successfully received and stored, server sends 250 OK reply. 


Forwarding
----------

Forwarding support is most often used by enterprises to link a person's prior address to current one. 
Silent forwarding of message, with any notification to end user, is commonplace. 


Debugging Addresses
--------------------------------
Smtp provides commands to verify usernames or obtain the content of a mailing list. 
This is done with the VRFY and EXPN commands. 


VRFY takes username and/or domain as an argument.
If smtp server responds with a 250 OK, the server must include the mailbox of the user and optionally the fullname. 
If the name identify more than 1 mailbox, the server may either note the ambiguity or identify the alternatives. 


EXPN command contains a mailing list. 
If smtp servers sends 250 OK, it is required to send the full name of users and their mailboxes relating to the mailing list. 


SMTP Commands
-------------

Smtp commands are character strings terminated by <CRLF>

A mail transaction involves several data objects that are communicated as arguments to different commands. 
The <reverse-path> is the argument of the mail command. 
The <forward-path> is the argument of the RCPT command. 
The mail data is the argument of the DATA command. 

These data objects must be transmitted and held. 
Different buffers are provided to hold the type of data objects. 
There is a reverse-path buffer, a forward-path buffer and a data buffer. 
Specific commands cause information to be appended to a specific buffer, or cause or more more buffers to be cleared. 


